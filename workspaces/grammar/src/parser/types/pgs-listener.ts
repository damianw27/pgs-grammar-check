import { ParseTreeListener } from 'antlr4ts/tree/ParseTreeListener';
import { PgsContext } from '../contexts/pgs-context';
import { CreateTypeContext } from '../contexts/create-type-context';
import { CreateNodeTypeContext } from '../contexts/create-node-type-context';
import { CreateEdgeTypeContext } from '../contexts/create-edge-type-context';
import { CreateGraphTypeContext } from '../contexts/create-graph-type-context';
import { GraphTypeContext } from '../contexts/graph-type-context';
import { ElementTypesContext } from '../contexts/element-types-context';
import { ElementTypeContext } from '../contexts/element-type-context';
import { NodeTypeContext } from '../contexts/node-type-context';
import { EdgeTypeContext } from '../contexts/edge-type-context';
import { EndpointTypeContext } from '../contexts/endpoint-type-context';
import { LabelPropertySpecContext } from '../contexts/label-property-spec-context';
import { LabelSpecContext } from '../contexts/label-spec-context';
import { PropertySpecContext } from '../contexts/property-spec-context';
import { PropertiesContext } from '../contexts/properties-context';
import { PropertyContext } from '../contexts/property-context';
import { PropertyTypeContext } from '../contexts/property-type-context';
import { KeyContext } from '../contexts/key-context';
import { LabelNameContext } from '../contexts/label-name-context';
import { TypeNameContext } from '../contexts/type-name-context';
import { DashContext } from '../contexts/dash-context';
import { RightArrowHeadContext } from '../contexts/right-arrow-head-context';

export interface PgsListener extends ParseTreeListener {
  enterPgs?: (ctx: PgsContext) => void;
  exitPgs?: (ctx: PgsContext) => void;
  enterCreateType?: (ctx: CreateTypeContext) => void;
  exitCreateType?: (ctx: CreateTypeContext) => void;
  enterCreateNodeType?: (ctx: CreateNodeTypeContext) => void;
  exitCreateNodeType?: (ctx: CreateNodeTypeContext) => void;
  enterCreateEdgeType?: (ctx: CreateEdgeTypeContext) => void;
  exitCreateEdgeType?: (ctx: CreateEdgeTypeContext) => void;
  enterCreateGraphType?: (ctx: CreateGraphTypeContext) => void;
  exitCreateGraphType?: (ctx: CreateGraphTypeContext) => void;
  enterGraphType?: (ctx: GraphTypeContext) => void;
  exitGraphType?: (ctx: GraphTypeContext) => void;
  enterElementTypes?: (ctx: ElementTypesContext) => void;
  exitElementTypes?: (ctx: ElementTypesContext) => void;
  enterElementType?: (ctx: ElementTypeContext) => void;
  exitElementType?: (ctx: ElementTypeContext) => void;
  enterNodeType?: (ctx: NodeTypeContext) => void;
  exitNodeType?: (ctx: NodeTypeContext) => void;
  enterEdgeType?: (ctx: EdgeTypeContext) => void;
  exitEdgeType?: (ctx: EdgeTypeContext) => void;
  enterEndpointType?: (ctx: EndpointTypeContext) => void;
  exitEndpointType?: (ctx: EndpointTypeContext) => void;
  enterLabelPropertySpec?: (ctx: LabelPropertySpecContext) => void;
  exitLabelPropertySpec?: (ctx: LabelPropertySpecContext) => void;
  enterLabelSpec?: (ctx: LabelSpecContext) => void;
  exitLabelSpec?: (ctx: LabelSpecContext) => void;
  enterPropertySpec?: (ctx: PropertySpecContext) => void;
  exitPropertySpec?: (ctx: PropertySpecContext) => void;
  enterProperties?: (ctx: PropertiesContext) => void;
  exitProperties?: (ctx: PropertiesContext) => void;
  enterProperty?: (ctx: PropertyContext) => void;
  exitProperty?: (ctx: PropertyContext) => void;
  enterPropertyType?: (ctx: PropertyTypeContext) => void;
  exitPropertyType?: (ctx: PropertyTypeContext) => void;
  enterKey?: (ctx: KeyContext) => void;
  exitKey?: (ctx: KeyContext) => void;
  enterLabelName?: (ctx: LabelNameContext) => void;
  exitLabelName?: (ctx: LabelNameContext) => void;
  enterTypeName?: (ctx: TypeNameContext) => void;
  exitTypeName?: (ctx: TypeNameContext) => void;
  enterDash?: (ctx: DashContext) => void;
  exitDash?: (ctx: DashContext) => void;
  enterRightArrowHead?: (ctx: RightArrowHeadContext) => void;
  exitRightArrowHead?: (ctx: RightArrowHeadContext) => void;
}
