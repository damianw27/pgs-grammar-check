// Generated from java-escape by ANTLR 4.11.1
// jshint ignore: start
import antlr4 from 'antlr4';


const serializedATN = [4,0,48,327,6,-1,2,0,7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,
4,7,4,2,5,7,5,2,6,7,6,2,7,7,7,2,8,7,8,2,9,7,9,2,10,7,10,2,11,7,11,2,12,7,
12,2,13,7,13,2,14,7,14,2,15,7,15,2,16,7,16,2,17,7,17,2,18,7,18,2,19,7,19,
2,20,7,20,2,21,7,21,2,22,7,22,2,23,7,23,2,24,7,24,2,25,7,25,2,26,7,26,2,
27,7,27,2,28,7,28,2,29,7,29,2,30,7,30,2,31,7,31,2,32,7,32,2,33,7,33,2,34,
7,34,2,35,7,35,2,36,7,36,2,37,7,37,2,38,7,38,2,39,7,39,2,40,7,40,2,41,7,
41,2,42,7,42,2,43,7,43,2,44,7,44,2,45,7,45,2,46,7,46,2,47,7,47,2,48,7,48,
2,49,7,49,2,50,7,50,2,51,7,51,2,52,7,52,2,53,7,53,2,54,7,54,2,55,7,55,2,
56,7,56,2,57,7,57,2,58,7,58,2,59,7,59,2,60,7,60,1,0,1,0,1,1,1,1,1,2,1,2,
1,3,1,3,1,4,1,4,1,5,1,5,1,6,1,6,1,7,1,7,1,8,1,8,1,9,1,9,1,10,1,10,1,11,1,
11,1,12,1,12,1,13,1,13,1,14,1,14,1,15,1,15,1,16,1,16,1,17,1,17,1,18,1,18,
1,19,1,19,1,20,1,20,1,21,1,21,1,22,1,22,1,23,1,23,1,24,1,24,1,25,1,25,1,
26,1,26,1,27,1,27,1,28,1,28,1,29,1,29,1,29,1,29,1,29,1,29,1,29,1,30,1,30,
1,30,1,30,1,30,1,31,1,31,1,31,1,31,1,31,1,32,1,32,1,32,1,32,1,32,1,33,1,
33,1,33,1,33,1,33,1,33,1,33,1,33,1,33,1,34,1,34,1,34,1,34,1,34,1,35,1,35,
1,35,1,35,1,35,1,35,1,36,1,36,1,36,1,36,1,36,1,36,1,36,1,37,1,37,1,37,1,
37,1,37,1,37,1,37,1,37,1,37,1,38,4,38,241,8,38,11,38,12,38,242,1,39,1,39,
1,39,1,39,1,39,1,39,1,39,1,39,1,39,1,39,1,39,3,39,256,8,39,1,40,1,40,1,41,
1,41,1,42,1,42,1,43,1,43,1,44,1,44,1,45,1,45,1,46,1,46,1,47,1,47,1,48,1,
48,1,49,1,49,1,50,1,50,1,51,1,51,1,52,1,52,1,53,4,53,285,8,53,11,53,12,53,
286,1,54,1,54,1,54,1,54,1,54,1,54,1,54,1,54,1,54,1,54,1,54,1,54,1,54,1,54,
1,54,1,54,1,54,1,54,3,54,307,8,54,1,55,1,55,3,55,311,8,55,1,56,1,56,3,56,
315,8,56,1,57,1,57,3,57,319,8,57,1,58,1,58,1,59,3,59,324,8,59,1,60,1,60,
0,0,61,1,1,3,2,5,3,7,4,9,5,11,6,13,7,15,8,17,9,19,10,21,11,23,12,25,13,27,
14,29,15,31,16,33,17,35,18,37,19,39,20,41,21,43,22,45,23,47,24,49,25,51,
26,53,27,55,28,57,29,59,30,61,31,63,32,65,33,67,34,69,35,71,36,73,37,75,
38,77,39,79,40,81,0,83,0,85,0,87,0,89,0,91,0,93,0,95,0,97,0,99,0,101,0,103,
0,105,0,107,41,109,42,111,43,113,44,115,45,117,46,119,47,121,48,1,0,34,2,
0,67,67,99,99,2,0,82,82,114,114,2,0,69,69,101,101,2,0,65,65,97,97,2,0,84,
84,116,116,2,0,78,78,110,110,2,0,79,79,111,111,2,0,68,68,100,100,2,0,71,
71,103,103,2,0,80,80,112,112,2,0,73,73,105,105,2,0,76,76,108,108,2,0,89,
89,121,121,2,0,72,72,104,104,2,0,83,83,115,115,2,0,66,66,98,98,8,0,160,160,
5760,5760,6158,6158,8192,8202,8232,8233,8239,8239,8287,8287,12288,12288,
1,0,12,12,1,0,96,96,1,0,30,30,2,0,39,39,92,92,1,0,29,29,1,0,28,28,1,0,13,
13,1,0,32,32,1,0,9,9,2,0,34,34,92,92,1,0,10,10,1,0,11,11,1,0,31,31,5,0,45,
45,48,57,65,90,95,95,97,122,13,0,34,34,39,39,66,66,70,70,78,78,82,82,84,
84,92,92,98,98,102,102,110,110,114,114,116,116,2,0,85,85,117,117,2,0,65,
70,97,102,330,0,1,1,0,0,0,0,3,1,0,0,0,0,5,1,0,0,0,0,7,1,0,0,0,0,9,1,0,0,
0,0,11,1,0,0,0,0,13,1,0,0,0,0,15,1,0,0,0,0,17,1,0,0,0,0,19,1,0,0,0,0,21,
1,0,0,0,0,23,1,0,0,0,0,25,1,0,0,0,0,27,1,0,0,0,0,29,1,0,0,0,0,31,1,0,0,0,
0,33,1,0,0,0,0,35,1,0,0,0,0,37,1,0,0,0,0,39,1,0,0,0,0,41,1,0,0,0,0,43,1,
0,0,0,0,45,1,0,0,0,0,47,1,0,0,0,0,49,1,0,0,0,0,51,1,0,0,0,0,53,1,0,0,0,0,
55,1,0,0,0,0,57,1,0,0,0,0,59,1,0,0,0,0,61,1,0,0,0,0,63,1,0,0,0,0,65,1,0,
0,0,0,67,1,0,0,0,0,69,1,0,0,0,0,71,1,0,0,0,0,73,1,0,0,0,0,75,1,0,0,0,0,77,
1,0,0,0,0,79,1,0,0,0,0,107,1,0,0,0,0,109,1,0,0,0,0,111,1,0,0,0,0,113,1,0,
0,0,0,115,1,0,0,0,0,117,1,0,0,0,0,119,1,0,0,0,0,121,1,0,0,0,1,123,1,0,0,
0,3,125,1,0,0,0,5,127,1,0,0,0,7,129,1,0,0,0,9,131,1,0,0,0,11,133,1,0,0,0,
13,135,1,0,0,0,15,137,1,0,0,0,17,139,1,0,0,0,19,141,1,0,0,0,21,143,1,0,0,
0,23,145,1,0,0,0,25,147,1,0,0,0,27,149,1,0,0,0,29,151,1,0,0,0,31,153,1,0,
0,0,33,155,1,0,0,0,35,157,1,0,0,0,37,159,1,0,0,0,39,161,1,0,0,0,41,163,1,
0,0,0,43,165,1,0,0,0,45,167,1,0,0,0,47,169,1,0,0,0,49,171,1,0,0,0,51,173,
1,0,0,0,53,175,1,0,0,0,55,177,1,0,0,0,57,179,1,0,0,0,59,181,1,0,0,0,61,188,
1,0,0,0,63,193,1,0,0,0,65,198,1,0,0,0,67,203,1,0,0,0,69,212,1,0,0,0,71,217,
1,0,0,0,73,223,1,0,0,0,75,230,1,0,0,0,77,240,1,0,0,0,79,255,1,0,0,0,81,257,
1,0,0,0,83,259,1,0,0,0,85,261,1,0,0,0,87,263,1,0,0,0,89,265,1,0,0,0,91,267,
1,0,0,0,93,269,1,0,0,0,95,271,1,0,0,0,97,273,1,0,0,0,99,275,1,0,0,0,101,
277,1,0,0,0,103,279,1,0,0,0,105,281,1,0,0,0,107,284,1,0,0,0,109,288,1,0,
0,0,111,310,1,0,0,0,113,314,1,0,0,0,115,318,1,0,0,0,117,320,1,0,0,0,119,
323,1,0,0,0,121,325,1,0,0,0,123,124,5,59,0,0,124,2,1,0,0,0,125,126,5,123,
0,0,126,4,1,0,0,0,127,128,5,125,0,0,128,6,1,0,0,0,129,130,5,44,0,0,130,8,
1,0,0,0,131,132,5,40,0,0,132,10,1,0,0,0,133,134,5,41,0,0,134,12,1,0,0,0,
135,136,5,91,0,0,136,14,1,0,0,0,137,138,5,93,0,0,138,16,1,0,0,0,139,140,
5,58,0,0,140,18,1,0,0,0,141,142,5,124,0,0,142,20,1,0,0,0,143,144,5,38,0,
0,144,22,1,0,0,0,145,146,5,63,0,0,146,24,1,0,0,0,147,148,5,45,0,0,148,26,
1,0,0,0,149,150,5,173,0,0,150,28,1,0,0,0,151,152,5,8208,0,0,152,30,1,0,0,
0,153,154,5,8209,0,0,154,32,1,0,0,0,155,156,5,8210,0,0,156,34,1,0,0,0,157,
158,5,8211,0,0,158,36,1,0,0,0,159,160,5,8212,0,0,160,38,1,0,0,0,161,162,
5,8213,0,0,162,40,1,0,0,0,163,164,5,8722,0,0,164,42,1,0,0,0,165,166,5,65112,
0,0,166,44,1,0,0,0,167,168,5,65123,0,0,168,46,1,0,0,0,169,170,5,65293,0,
0,170,48,1,0,0,0,171,172,5,62,0,0,172,50,1,0,0,0,173,174,5,10217,0,0,174,
52,1,0,0,0,175,176,5,12297,0,0,176,54,1,0,0,0,177,178,5,65125,0,0,178,56,
1,0,0,0,179,180,5,65310,0,0,180,58,1,0,0,0,181,182,7,0,0,0,182,183,7,1,0,
0,183,184,7,2,0,0,184,185,7,3,0,0,185,186,7,4,0,0,186,187,7,2,0,0,187,60,
1,0,0,0,188,189,7,5,0,0,189,190,7,6,0,0,190,191,7,7,0,0,191,192,7,2,0,0,
192,62,1,0,0,0,193,194,7,2,0,0,194,195,7,7,0,0,195,196,7,8,0,0,196,197,7,
2,0,0,197,64,1,0,0,0,198,199,7,6,0,0,199,200,7,9,0,0,200,201,7,2,0,0,201,
202,7,5,0,0,202,66,1,0,0,0,203,204,7,6,0,0,204,205,7,9,0,0,205,206,7,4,0,
0,206,207,7,10,0,0,207,208,7,6,0,0,208,209,7,5,0,0,209,210,7,3,0,0,210,211,
7,11,0,0,211,68,1,0,0,0,212,213,7,4,0,0,213,214,7,12,0,0,214,215,7,9,0,0,
215,216,7,2,0,0,216,70,1,0,0,0,217,218,7,8,0,0,218,219,7,1,0,0,219,220,7,
3,0,0,220,221,7,9,0,0,221,222,7,13,0,0,222,72,1,0,0,0,223,224,7,14,0,0,224,
225,7,4,0,0,225,226,7,1,0,0,226,227,7,10,0,0,227,228,7,0,0,0,228,229,7,4,
0,0,229,74,1,0,0,0,230,231,7,3,0,0,231,232,7,15,0,0,232,233,7,14,0,0,233,
234,7,4,0,0,234,235,7,1,0,0,235,236,7,3,0,0,236,237,7,0,0,0,237,238,7,4,
0,0,238,76,1,0,0,0,239,241,3,79,39,0,240,239,1,0,0,0,241,242,1,0,0,0,242,
240,1,0,0,0,242,243,1,0,0,0,243,78,1,0,0,0,244,256,3,95,47,0,245,256,3,97,
48,0,246,256,3,101,50,0,247,256,3,103,51,0,248,256,3,81,40,0,249,256,3,93,
46,0,250,256,3,91,45,0,251,256,3,89,44,0,252,256,3,85,42,0,253,256,3,105,
52,0,254,256,7,16,0,0,255,244,1,0,0,0,255,245,1,0,0,0,255,246,1,0,0,0,255,
247,1,0,0,0,255,248,1,0,0,0,255,249,1,0,0,0,255,250,1,0,0,0,255,251,1,0,
0,0,255,252,1,0,0,0,255,253,1,0,0,0,255,254,1,0,0,0,256,80,1,0,0,0,257,258,
7,17,0,0,258,82,1,0,0,0,259,260,8,18,0,0,260,84,1,0,0,0,261,262,7,19,0,0,
262,86,1,0,0,0,263,264,8,20,0,0,264,88,1,0,0,0,265,266,7,21,0,0,266,90,1,
0,0,0,267,268,7,22,0,0,268,92,1,0,0,0,269,270,7,23,0,0,270,94,1,0,0,0,271,
272,7,24,0,0,272,96,1,0,0,0,273,274,7,25,0,0,274,98,1,0,0,0,275,276,8,26,
0,0,276,100,1,0,0,0,277,278,7,27,0,0,278,102,1,0,0,0,279,280,7,28,0,0,280,
104,1,0,0,0,281,282,7,29,0,0,282,106,1,0,0,0,283,285,7,30,0,0,284,283,1,
0,0,0,285,286,1,0,0,0,286,284,1,0,0,0,286,287,1,0,0,0,287,108,1,0,0,0,288,
306,5,92,0,0,289,307,7,31,0,0,290,291,7,32,0,0,291,292,3,111,55,0,292,293,
3,111,55,0,293,294,3,111,55,0,294,295,3,111,55,0,295,307,1,0,0,0,296,297,
7,32,0,0,297,298,3,111,55,0,298,299,3,111,55,0,299,300,3,111,55,0,300,301,
3,111,55,0,301,302,3,111,55,0,302,303,3,111,55,0,303,304,3,111,55,0,304,
305,3,111,55,0,305,307,1,0,0,0,306,289,1,0,0,0,306,290,1,0,0,0,306,296,1,
0,0,0,307,110,1,0,0,0,308,311,3,113,56,0,309,311,3,119,59,0,310,308,1,0,
0,0,310,309,1,0,0,0,311,112,1,0,0,0,312,315,3,121,60,0,313,315,3,115,57,
0,314,312,1,0,0,0,314,313,1,0,0,0,315,114,1,0,0,0,316,319,3,117,58,0,317,
319,2,56,57,0,318,316,1,0,0,0,318,317,1,0,0,0,319,116,1,0,0,0,320,321,2,
49,55,0,321,118,1,0,0,0,322,324,7,33,0,0,323,322,1,0,0,0,324,120,1,0,0,0,
325,326,5,48,0,0,326,122,1,0,0,0,9,0,242,255,286,306,310,314,318,323,0];


const atn = new antlr4.atn.ATNDeserializer().deserialize(serializedATN);

const decisionsToDFA = atn.decisionToState.map( (ds, index) => new antlr4.dfa.DFA(ds, index) );

export default class pgsLexer extends antlr4.Lexer {

    static grammarFileName = "pgs.g4";
    static channelNames = [ "DEFAULT_TOKEN_CHANNEL", "HIDDEN" ];
	static modeNames = [ "DEFAULT_MODE" ];
	static literalNames = [ null, "';'", "'{'", "'}'", "','", "'('", "')'", 
                         "'['", "']'", "':'", "'|'", "'&'", "'?'", "'-'", 
                         "'\\u00AD'", "'\\u2010'", "'\\u2011'", "'\\u2012'", 
                         "'\\u2013'", "'\\u2014'", "'\\u2015'", "'\\u2212'", 
                         "'\\uFE58'", "'\\uFE63'", "'\\uFF0D'", "'>'", "'\\u27E9'", 
                         "'\\u3009'", "'\\uFE65'", "'\\uFF1E'", null, null, 
                         null, null, null, null, null, null, null, null, 
                         null, null, null, null, null, null, null, null, 
                         "'0'" ];
	static symbolicNames = [ null, null, null, null, null, null, null, null, 
                          null, null, null, null, null, null, null, null, 
                          null, null, null, null, null, null, null, null, 
                          null, null, null, null, null, null, "CREATE", 
                          "NODE", "EDGE", "OPEN", "OPTIONAL", "TYPE", "GRAPH", 
                          "STRICT", "ABSTRACT", "SP", "WHITESPACE", "StringLiteral", 
                          "EscapedChar", "HexDigit", "Digit", "NonZeroDigit", 
                          "NonZeroOctDigit", "HexLetter", "ZeroDigit" ];
	static ruleNames = [ "T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", 
                      "T__7", "T__8", "T__9", "T__10", "T__11", "T__12", 
                      "T__13", "T__14", "T__15", "T__16", "T__17", "T__18", 
                      "T__19", "T__20", "T__21", "T__22", "T__23", "T__24", 
                      "T__25", "T__26", "T__27", "T__28", "CREATE", "NODE", 
                      "EDGE", "OPEN", "OPTIONAL", "TYPE", "GRAPH", "STRICT", 
                      "ABSTRACT", "SP", "WHITESPACE", "FF", "EscapedSymbolicName_0", 
                      "RS", "StringLiteral_1", "GS", "FS", "CR", "SPACE", 
                      "TAB", "StringLiteral_0", "LF", "VT", "US", "StringLiteral", 
                      "EscapedChar", "HexDigit", "Digit", "NonZeroDigit", 
                      "NonZeroOctDigit", "HexLetter", "ZeroDigit" ];

    constructor(input) {
        super(input)
        this._interp = new antlr4.atn.LexerATNSimulator(this, atn, decisionsToDFA, new antlr4.PredictionContextCache());
    }

    get atn() {
        return atn;
    }
}

pgsLexer.EOF = antlr4.Token.EOF;
pgsLexer.T__0 = 1;
pgsLexer.T__1 = 2;
pgsLexer.T__2 = 3;
pgsLexer.T__3 = 4;
pgsLexer.T__4 = 5;
pgsLexer.T__5 = 6;
pgsLexer.T__6 = 7;
pgsLexer.T__7 = 8;
pgsLexer.T__8 = 9;
pgsLexer.T__9 = 10;
pgsLexer.T__10 = 11;
pgsLexer.T__11 = 12;
pgsLexer.T__12 = 13;
pgsLexer.T__13 = 14;
pgsLexer.T__14 = 15;
pgsLexer.T__15 = 16;
pgsLexer.T__16 = 17;
pgsLexer.T__17 = 18;
pgsLexer.T__18 = 19;
pgsLexer.T__19 = 20;
pgsLexer.T__20 = 21;
pgsLexer.T__21 = 22;
pgsLexer.T__22 = 23;
pgsLexer.T__23 = 24;
pgsLexer.T__24 = 25;
pgsLexer.T__25 = 26;
pgsLexer.T__26 = 27;
pgsLexer.T__27 = 28;
pgsLexer.T__28 = 29;
pgsLexer.CREATE = 30;
pgsLexer.NODE = 31;
pgsLexer.EDGE = 32;
pgsLexer.OPEN = 33;
pgsLexer.OPTIONAL = 34;
pgsLexer.TYPE = 35;
pgsLexer.GRAPH = 36;
pgsLexer.STRICT = 37;
pgsLexer.ABSTRACT = 38;
pgsLexer.SP = 39;
pgsLexer.WHITESPACE = 40;
pgsLexer.StringLiteral = 41;
pgsLexer.EscapedChar = 42;
pgsLexer.HexDigit = 43;
pgsLexer.Digit = 44;
pgsLexer.NonZeroDigit = 45;
pgsLexer.NonZeroOctDigit = 46;
pgsLexer.HexLetter = 47;
pgsLexer.ZeroDigit = 48;



